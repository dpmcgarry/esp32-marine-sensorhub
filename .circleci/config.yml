# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@5.1.0
jobs:
  build:
    environment:
      AWS_REGION: us-east-1
      BASE_VERSION: 1.0.
    docker:
      - image: dpmcgarry/esp-idf:latest
    resource_class: dizon/onprem
    steps:
      - checkout
      - run:
          name: List Home
          command: ls -la -R ~
      - run:
          name: Print Working Directory
          command: pwd
      - aws-cli/setup:
          profile_name: default
          region: ${AWS_REGION}
          role_arn: ${AWS_ROLE_ARN}
      - run:
          name: Check S3
          command: aws s3 ls
      - run:
          name: Get Config from S3
          command: |
            mkdir prefs
            aws s3 cp s3://${ARTIFACT_BUCKET}/etc/msh/prefs/ ./prefs --recursive
            ls -l ./prefs
      - run:
          name: Build and Upload All Pref Partitions
          command: |
            source /root/esp/esp-idf/export.sh
            cd prefs
            for preffile in *.csv; do python /root/esp/esp-idf/components/nvs_flash/nvs_partition_generator/nvs_partition_gen.py generate ./${preffile} ./${preffile/.csv/.bin} 20480 ; done
            for binfile in *.bin; do aws s3 cp ${binfile} s3://${ARTIFACT_BUCKET}/esp/msh/prefs/${binfile/.bin/-latest.bin} && aws s3 cp ${binfile} s3://${ARTIFACT_BUCKET}/esp/msh/prefs/${binfile/.bin/-$BASE_VERSION$CIRCLE_BUILD_NUM.bin} ; done
            ls -l
      - run:
          name: Build ELF Image for ESP32C6
          command: arduino-cli compile --fqbn esp32:esp32:esp32c6:FlashSize=8M,PartitionScheme=default_8MB esp32-marine-sensorhub
      - run:
          name: List Results
          command: ls -la -R .
workflows:
  build-and-upload:
    jobs:
      - build:
         context:
            - aws-constants
